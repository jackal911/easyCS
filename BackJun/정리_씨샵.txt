* List 변환
 // List에 func를 적용한 List를 return함
 - List<T> anyList.ConvertAll(func)
 // anyList에 func를 적용한 것을 anyList에 반영한다. 
 - void anyList.ForEach(func)

* Dictionary 정렬
 // dictionary에서 item의 key순으로 먼저 정렬한 다음 Value순으로 정렬한다. 즉 Value가 우선적으로 정렬된 후 key순으로 정렬.
 - var sortedDict = from item in dict orderby item.Key orderby item.Value select item;

* Lower bound, Upper bound 알고리즘
 - https://blog.naver.com/bestmaker0290/220820005454
 - Lower bound : 원하는 값 k 이상이 처음 나오는 위치를 찾는 과정
  + C# 코드
	StreamReader sr = new StreamReader(Console.OpenStandardInput());
	StreamWriter sw = new StreamWriter(Console.OpenStandardOutput());
	sr.ReadLine();
	List<int> nums = sr.ReadLine().Split().ToList().ConvertAll(int.Parse);
	List<int> orderedNums = nums.Distinct().ToList();
	orderedNums.Sort();
	foreach (var num in nums)
	{
		int left = 0;
		int right = orderedNums.Count - 1;
		while (left < right)
		{
			int mid = (right + left) / 2;
			if (num > orderedNums[mid])
			{
				left = mid+1;
			}
			else
			{
				right = mid;
			}
		}
		sw.Write("{0} ", right);
	}
	sw.Close();
 - Upper bound : 원하는 값 k를 초과한 값이 처음 나오는 위치를 찾는 과정

* 카운팅정렬(카운트소팅)
 - https://funfunhanblog.tistory.com/401
 - 변수의 범위가 작을 때 array의 index를 변수와 대응시켜 count하는 정렬